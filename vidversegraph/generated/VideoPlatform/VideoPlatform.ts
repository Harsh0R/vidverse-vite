// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CreatedStream extends ethereum.Event {
  get params(): CreatedStream__Params {
    return new CreatedStream__Params(this);
  }
}

export class CreatedStream__Params {
  _event: CreatedStream;

  constructor(event: CreatedStream) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stramName(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get playBackId(): string {
    return this._event.parameters[4].value.toString();
  }

  get status(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get streamKey(): string {
    return this._event.parameters[6].value.toString();
  }

  get streamID(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class StreamStopped extends ethereum.Event {
  get params(): StreamStopped__Params {
    return new StreamStopped__Params(this);
  }
}

export class StreamStopped__Params {
  _event: StreamStopped;

  constructor(event: StreamStopped) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VideoTipped extends ethereum.Event {
  get params(): VideoTipped__Params {
    return new VideoTipped__Params(this);
  }
}

export class VideoTipped__Params {
  _event: VideoTipped;

  constructor(event: VideoTipped) {
    this._event = event;
  }

  get videoId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tipper(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newTipAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VideoUploaded extends ethereum.Event {
  get params(): VideoUploaded__Params {
    return new VideoUploaded__Params(this);
  }
}

export class VideoUploaded__Params {
  _event: VideoUploaded;

  constructor(event: VideoUploaded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get ipfsHash(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VideoPlatform__getAllActiveLiveStreamsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get stramName(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get playBackId(): string {
    return this[4].toString();
  }

  get tipAmount(): BigInt {
    return this[5].toBigInt();
  }

  get status(): boolean {
    return this[6].toBoolean();
  }

  get streamKey(): string {
    return this[7].toString();
  }

  get streamID(): string {
    return this[8].toString();
  }
}

export class VideoPlatform__getMyActiveLiveStreamsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get stramName(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get playBackId(): string {
    return this[4].toString();
  }

  get tipAmount(): BigInt {
    return this[5].toBigInt();
  }

  get status(): boolean {
    return this[6].toBoolean();
  }

  get streamKey(): string {
    return this[7].toString();
  }

  get streamID(): string {
    return this[8].toString();
  }
}

export class VideoPlatform__liveStreamsResult {
  value0: BigInt;
  value1: Address;
  value2: string;
  value3: string;
  value4: string;
  value5: BigInt;
  value6: boolean;
  value7: string;
  value8: string;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: string,
    value3: string,
    value4: string,
    value5: BigInt,
    value6: boolean,
    value7: string,
    value8: string,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getStramName(): string {
    return this.value2;
  }

  getDescription(): string {
    return this.value3;
  }

  getPlayBackId(): string {
    return this.value4;
  }

  getTipAmount(): BigInt {
    return this.value5;
  }

  getStatus(): boolean {
    return this.value6;
  }

  getStreamKey(): string {
    return this.value7;
  }

  getStreamID(): string {
    return this.value8;
  }
}

export class VideoPlatform__videosResult {
  value0: BigInt;
  value1: Address;
  value2: string;
  value3: string;
  value4: string;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: string,
    value3: string,
    value4: string,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getTitle(): string {
    return this.value2;
  }

  getDescription(): string {
    return this.value3;
  }

  getIpfsHash(): string {
    return this.value4;
  }

  getTipAmount(): BigInt {
    return this.value5;
  }
}

export class VideoPlatform extends ethereum.SmartContract {
  static bind(address: Address): VideoPlatform {
    return new VideoPlatform("VideoPlatform", address);
  }

  getAllActiveLiveStreams(): Array<VideoPlatform__getAllActiveLiveStreamsResultValue0Struct> {
    let result = super.call(
      "getAllActiveLiveStreams",
      "getAllActiveLiveStreams():((uint256,address,string,string,string,uint256,bool,string,string)[])",
      [],
    );

    return result[0].toTupleArray<VideoPlatform__getAllActiveLiveStreamsResultValue0Struct>();
  }

  try_getAllActiveLiveStreams(): ethereum.CallResult<
    Array<VideoPlatform__getAllActiveLiveStreamsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllActiveLiveStreams",
      "getAllActiveLiveStreams():((uint256,address,string,string,string,uint256,bool,string,string)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<VideoPlatform__getAllActiveLiveStreamsResultValue0Struct>(),
    );
  }

  getMyActiveLiveStreams(
    account: Address,
  ): Array<VideoPlatform__getMyActiveLiveStreamsResultValue0Struct> {
    let result = super.call(
      "getMyActiveLiveStreams",
      "getMyActiveLiveStreams(address):((uint256,address,string,string,string,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(account)],
    );

    return result[0].toTupleArray<VideoPlatform__getMyActiveLiveStreamsResultValue0Struct>();
  }

  try_getMyActiveLiveStreams(
    account: Address,
  ): ethereum.CallResult<
    Array<VideoPlatform__getMyActiveLiveStreamsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getMyActiveLiveStreams",
      "getMyActiveLiveStreams(address):((uint256,address,string,string,string,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<VideoPlatform__getMyActiveLiveStreamsResultValue0Struct>(),
    );
  }

  liveStreams(param0: BigInt): VideoPlatform__liveStreamsResult {
    let result = super.call(
      "liveStreams",
      "liveStreams(uint256):(uint256,address,string,string,string,uint256,bool,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new VideoPlatform__liveStreamsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toString(),
      result[8].toString(),
    );
  }

  try_liveStreams(
    param0: BigInt,
  ): ethereum.CallResult<VideoPlatform__liveStreamsResult> {
    let result = super.tryCall(
      "liveStreams",
      "liveStreams(uint256):(uint256,address,string,string,string,uint256,bool,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VideoPlatform__liveStreamsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toString(),
        value[8].toString(),
      ),
    );
  }

  myToken(): Address {
    let result = super.call("myToken", "myToken():(address)", []);

    return result[0].toAddress();
  }

  try_myToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("myToken", "myToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  videos(param0: BigInt): VideoPlatform__videosResult {
    let result = super.call(
      "videos",
      "videos(uint256):(uint256,address,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new VideoPlatform__videosResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
    );
  }

  try_videos(param0: BigInt): ethereum.CallResult<VideoPlatform__videosResult> {
    let result = super.tryCall(
      "videos",
      "videos(uint256):(uint256,address,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VideoPlatform__videosResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateStreamCall extends ethereum.Call {
  get inputs(): CreateStreamCall__Inputs {
    return new CreateStreamCall__Inputs(this);
  }

  get outputs(): CreateStreamCall__Outputs {
    return new CreateStreamCall__Outputs(this);
  }
}

export class CreateStreamCall__Inputs {
  _call: CreateStreamCall;

  constructor(call: CreateStreamCall) {
    this._call = call;
  }

  get userAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _playbackId(): string {
    return this._call.inputValues[3].value.toString();
  }

  get streamKey(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _streamID(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class CreateStreamCall__Outputs {
  _call: CreateStreamCall;

  constructor(call: CreateStreamCall) {
    this._call = call;
  }
}

export class StopStreamByStreamIDCall extends ethereum.Call {
  get inputs(): StopStreamByStreamIDCall__Inputs {
    return new StopStreamByStreamIDCall__Inputs(this);
  }

  get outputs(): StopStreamByStreamIDCall__Outputs {
    return new StopStreamByStreamIDCall__Outputs(this);
  }
}

export class StopStreamByStreamIDCall__Inputs {
  _call: StopStreamByStreamIDCall;

  constructor(call: StopStreamByStreamIDCall) {
    this._call = call;
  }

  get useAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _streamID(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class StopStreamByStreamIDCall__Outputs {
  _call: StopStreamByStreamIDCall;

  constructor(call: StopStreamByStreamIDCall) {
    this._call = call;
  }
}

export class TipStreamOwnerCall extends ethereum.Call {
  get inputs(): TipStreamOwnerCall__Inputs {
    return new TipStreamOwnerCall__Inputs(this);
  }

  get outputs(): TipStreamOwnerCall__Outputs {
    return new TipStreamOwnerCall__Outputs(this);
  }
}

export class TipStreamOwnerCall__Inputs {
  _call: TipStreamOwnerCall;

  constructor(call: TipStreamOwnerCall) {
    this._call = call;
  }

  get useAddre(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _streamId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TipStreamOwnerCall__Outputs {
  _call: TipStreamOwnerCall;

  constructor(call: TipStreamOwnerCall) {
    this._call = call;
  }
}

export class TipVideoOwnerCall extends ethereum.Call {
  get inputs(): TipVideoOwnerCall__Inputs {
    return new TipVideoOwnerCall__Inputs(this);
  }

  get outputs(): TipVideoOwnerCall__Outputs {
    return new TipVideoOwnerCall__Outputs(this);
  }
}

export class TipVideoOwnerCall__Inputs {
  _call: TipVideoOwnerCall;

  constructor(call: TipVideoOwnerCall) {
    this._call = call;
  }

  get userAddre(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _videoId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TipVideoOwnerCall__Outputs {
  _call: TipVideoOwnerCall;

  constructor(call: TipVideoOwnerCall) {
    this._call = call;
  }
}

export class UploadVideoCall extends ethereum.Call {
  get inputs(): UploadVideoCall__Inputs {
    return new UploadVideoCall__Inputs(this);
  }

  get outputs(): UploadVideoCall__Outputs {
    return new UploadVideoCall__Outputs(this);
  }
}

export class UploadVideoCall__Inputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }

  get userAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UploadVideoCall__Outputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }
}
